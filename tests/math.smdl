#smdl

import ::math::*;

unit_test "Math" {
  #assert(math::abs(-7) == 7);
  #assert(math::abs(-7.1) == 7.1);
  #assert(math::isinf($INF) && !math::isnan($INF) && !math::isfinite($INF));
  #assert(math::isnan($NAN) && !math::isinf($NAN) && !math::isfinite($NAN));
  #assert(math::cos(math::acos(0.349)) ~== [1e-5] 0.349);
  #assert(math::sin(math::asin(0.715)) ~== [1e-5] 0.715);
  #assert(math::tan(math::atan(0.631)) ~== [1e-5] 0.631);
  #assert(math::atan2(math::sin(theta := 1.491), math::cos(theta)) ~== [1e-5] theta);
  #assert(math::log(math::exp(0.617)) ~== [1e-5] 0.617);
  #assert(math::log2(math::exp2(0.617)) ~== [1e-5] 0.617);
  #assert(math::log10(math::exp10(0.617)) ~== [1e-5] 0.617);
  #assert(math::lerp(2.7, 8.1, 0.5) ~== [1e-5] 0.5 * (2.7 + 8.1));
  #assert(math::lerp(2.7, 8.1, 0.0) == 2.7);
  #assert(math::lerp(2.7, 8.1, 1.0) == 8.1);
  #assert(math::smoothstep(2.7, 8.1, 0.0) == 2.7);
  #assert(math::smoothstep(2.7, 8.1, 1.0) == 8.1);
  #assert(#all(math::cross(float3(1, 0, 0), float3(0, 1, 0)) == float3(0, 0, 1)));
}
